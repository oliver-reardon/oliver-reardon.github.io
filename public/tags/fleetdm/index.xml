<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FleetDM on Oliver Reardon</title>
    <link>//localhost:1313/tags/fleetdm/</link>
    <description>Recent content in FleetDM on Oliver Reardon</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 Aug 2024 13:16:10 -0400</lastBuildDate>
    <atom:link href="//localhost:1313/tags/fleetdm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Protecting FleetDM with AWS WAF</title>
      <link>//localhost:1313/posts/protecting-fleetdm-with-aws-waf/</link>
      <pubDate>Sun, 25 Aug 2024 13:16:10 -0400</pubDate>
      <guid>//localhost:1313/posts/protecting-fleetdm-with-aws-waf/</guid>
      <description>&lt;h1 id=&#34;protecting-fleetdm-with-aws-waf&#34;&gt;Protecting FleetDM with AWS WAF&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://fleetdm.com/docs/get-started/why-fleet?gad_source=1&#34;&gt;FleetDM&lt;/a&gt; web console presents a valuable interface for managing endpoints — and like any administrative UI, it benefits from being accessible only to trusted networks. This configuration uses AWS WAF to restrict direct access based on source IP address, ensuring that only traffic from defined locations is allowed to reach the console.&lt;/p&gt;&#xA;&lt;p&gt;The setup blocks all traffic by default and permits access only from trusted IP ranges, such as internal corporate networks and secure gateways used by managed browsers. While broader access policies are handled through a separate zero trust architecture, the WAF provides a clear network-layer boundary that limits exposure at the edge.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OSQuery Results to Loki with Kinesis Data Stream</title>
      <link>//localhost:1313/posts/osquery-results-to-loki-with-kinesis-data-stream/</link>
      <pubDate>Thu, 19 Oct 2023 11:35:25 -0400</pubDate>
      <guid>//localhost:1313/posts/osquery-results-to-loki-with-kinesis-data-stream/</guid>
      <description>&lt;p&gt;Forwarding &lt;a href=&#34;https://www.osquery.io/&#34;&gt;osquery&lt;/a&gt; results to a log aggregator or SIEM requires enriching the JSON data payload to match the destination’s expected structure. &lt;a href=&#34;https://aws.amazon.com/kinesis/data-streams/&#34;&gt;AWS Kinesis Data Streams&lt;/a&gt; ingests data in real time, applies transformations using Lambda, and then delivers the enriched JSON payload to the downstream destination — in this case, &lt;a href=&#34;https://grafana.com/oss/loki/&#34;&gt;Grafana Loki&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The osquery manager (&lt;a href=&#34;https://fleetdm.com/docs/get-started/why-fleet?gad_source=1&#34;&gt;FleetDM&lt;/a&gt;) runs as a container in AWS with the results plugin enabled by setting the environment variable &lt;code&gt;FLEET_OSQUERY_RESULT_LOG_PLUGIN&lt;/code&gt; to &lt;code&gt;kinesis&lt;/code&gt;. Additionally, defining &lt;code&gt;FLEET_KINESIS_RESULT_STREAM&lt;/code&gt; with the name of the Kinesis Data Stream, which, in the Terraform setup, is referenced as &lt;code&gt;aws_kinesis_stream.data_stream.name&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
