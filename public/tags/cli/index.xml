<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cli on Oliver Reardon</title>
    <link>//localhost:1313/tags/cli/</link>
    <description>Recent content in Cli on Oliver Reardon</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Oct 2023 12:56:06 -0400</lastBuildDate>
    <atom:link href="//localhost:1313/tags/cli/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mass Modify Computer Management Status In Jamf Pro</title>
      <link>//localhost:1313/posts/set-computer-management-status-jamf-pro/</link>
      <pubDate>Sun, 01 Oct 2023 12:56:06 -0400</pubDate>
      <guid>//localhost:1313/posts/set-computer-management-status-jamf-pro/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Jamf removed the ability to mass action modify the management status for computers in 10.49.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Modifying the management status of computers in Jamf Pro can still be useful for various asset management reasons. Expanding on the sentiment of &lt;a href=&#34;https://derflounder.wordpress.com/2023/08/15/updating-management-status-in-jamf-pro-computer-inventory-records-on-jamf-pro-10-49-0-and-later/&#34;&gt;Der Flounder&lt;/a&gt;, I created a simple Python tool to set the management status of Jamf Pro computer object(s) via the universal api. Rather than using a pre-defined static list - the tool uses an Advanced Computer Search to iterate over.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unix Password Manager with Multiple Repos &#43; zsh Completion</title>
      <link>//localhost:1313/posts/unix-password-manager-with-multiple-repos-plus-zsh-completion/</link>
      <pubDate>Thu, 15 Dec 2022 02:36:49 -0400</pubDate>
      <guid>//localhost:1313/posts/unix-password-manager-with-multiple-repos-plus-zsh-completion/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.passwordstore.org/&#34;&gt;&lt;strong&gt;Pass&lt;/strong&gt;&lt;/a&gt; is a brutally simple and effective CLI password manager for *nix systems. There are multiple front ends if you prefer not to rely on the CLI, and also a great iOS app that can sync your pass git repo â€“ &lt;a href=&#34;https://mssun.github.io/passforios/&#34;&gt;passforios&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I prefer to separate various project password stores into multiple repos, but pass does not cater for this natively. By default, it creates a single password store at &lt;code&gt;~/.password-store&lt;/code&gt;. To change that behavior and use an alternate location, you must modify an environment variable and define your new preferred location.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
