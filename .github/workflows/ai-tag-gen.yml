name: AI Front Matter Generator

on:
  pull_request:
    paths: 
      - 'content/posts/**/*.md'
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  generate-frontmatter:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}  # This checks out the actual PR branch
          fetch-depth: 0
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: content/posts/**/*.md
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install "openai>=1.0.0" pyyaml python-frontmatter
          
      - name: Generate and apply AI suggestions
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python .github/scripts/generate_frontmatter.py ${{ steps.changed-files.outputs.all_changed_files }}
          
      - name: Commit AI changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "AI Front Matter Bot"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Add AI-generated tags and keywords"
            git push origin ${{ github.head_ref }}  # Push to the PR branch explicitly
          fi
          
      - name: Comment PR with summary
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('ai-summary.md')) {
              const summary = fs.readFileSync('ai-summary.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            }